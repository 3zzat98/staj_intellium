<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAfAAAAKQAAAB8AAAADAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAALoAAADHAAAAtwAA
        ABsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAPgAAADYAAACEAAAAzgAA
        AFoAAADNAAAAhAAAADYAAAA+AAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAABwAAAAfAAAAHwAA
        AB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHQAAAEcAAADQAAAAzwAA
        AJ0AAAA4AAAACAAAADoAAACeAAAA0AAAAM4AAAA3AAAAAAAAAAAAAAAAAAAAAAAAAAcAAACDAAAAwwAA
        AMEAAADBAAAAwQAAAMEAAADBAAAAwQAAAMEAAADBAAAAwQAAAMEAAADBAAAAwQAAAMEAAADCAAAA5QAA
        AKMAAAA5AAAAEQAAAAAAAAAAAAAAAAAAABAAAAA4AAAApwAAAJkAAAAEAAAAAAAAAAAAAAAAAAAAHAAA
        AMIAAABGAAAAIQAAACMAAAAjAAAAIwAAACMAAAAiAAAAIgAAACMAAAAjAAAAIwAAACMAAAAjAAAAIwAA
        ACQAAABuAAAAzwAAACwAAAAAAAAAJQAAAHEAAAAkAAAAAAAAACsAAADQAAAAYgAAAAIAAAAAAAAAAAAA
        AAAAAAAfAAAAwAAAACMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYAAAAVAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACIAAAC+AAAAKwAAAAAAAABvAAAA/AAAAGwAAAAAAAAAKQAAAL8AAAAiAAAAAAAA
        AAAAAAAAAAAAAAAAAB8AAADBAAAAIwAAAAAAAAAAAAAABwAAABgAAAA8AAAAuAAAALcAAAAyAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAAZAAAANAAAAAuAAAAAAAAACQAAABxAAAAIwAAAAAAAAAsAAAA0QAA
        AGIAAAACAAAAAAAAAAAAAAAAAAAAHwAAAMEAAAAjAAAAAAAAAAcAAAB/AAAAxgAAANUAAAB1AAAAdAAA
        ALwAAAAyAAAAAAAAAAAAAAAAAAAAAAAAAAQAAACbAAAApwAAADUAAAANAAAAAAAAAAAAAAAAAAAADQAA
        ADYAAACnAAAAmQAAAAQAAAAAAAAAAAAAAAAAAAAfAAAAwQAAACMAAAAAAAAAGgAAAMYAAABnAAAAUgAA
        AAgAAAAEAAAAdQAAALgAAAAXAAAAAAAAAAAAAAAAAAAAAAAAADgAAADOAAAAzwAAAJYAAAAxAAAACQAA
        ADEAAACWAAAA0AAAAM0AAAA3AAAAAAAAAAAAAAAAAAAAAAAAAB8AAADBAAAAIwAAAAAAAAAHAAAAiwAA
        AKYAAAAaAAAAAAAAAAMAAABuAAAAwwAAABsAAAAAAAAAAAAAAAAAAAAAAAAABAAAADkAAAA6AAAAjwAA
        AMoAAABXAAAAzwAAAOUAAABMAAAANwAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAHwAAAMEAAAAjAAAAAAAA
        AAAAAAARAAAAkwAAAKkAAAAZAAAARwAAANsAAABOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAYAAAAvwAAAM0AAADTAAAA1AAAAB0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfAAAAwQAA
        ACMAAAAAAAAAAAAAAAAAAAAQAAAAkgAAAKkAAABAAAAArwAAAI4AAAAPAAAABgAAAB0AAAAkAAAAHwAA
        AAcAAAAAAAAAAAAAAAIAAAAXAAAAHQAAADkAAADCAAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AB8AAADBAAAAIwAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAkgAAAKkAAAA/AAAArQAAAKcAAAChAAAAxQAA
        AL4AAAC/AAAAogAAADwAAAACAAAAAAAAAAAAAAAAAAAAIwAAAMAAAAAfAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAHwAAAMEAAAAjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAkAAAAKoAAAA/AAAAoAAA
        AIEAAAA6AAAAKAAAADIAAAB6AAAAwAAAAFsAAAACAAAAAAAAAAAAAAAjAAAAwQAAAB8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAfAAAAwQAAACMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAowAA
        AKAAAAASAAAAAwAAAAAAAAAAAAAAAAAAAAAAAABEAAAAwwAAADgAAAAAAAAAAAAAACMAAADBAAAAHwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8AAADBAAAAIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAQAAACeAAAAhgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8AAAAkgAAAAIAAAAAAAAAIwAA
        AMEAAAAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHwAAAMEAAAAjAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAGQAAAL0AAAA7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoAAAC2AAAAFQAA
        AAAAAAAjAAAAwQAAAB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfAAAAwQAAACMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAjAAAAvAAAACoAAAAAAAAAAAAAAAAAAAAAAAAAGQAAABgAAAAAAAAAKAAA
        ALwAAAAcAAAAAAAAACMAAADBAAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8AAADBAAAAIwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAAC5AAAAOgAAAAAAAAAAAAAAAAAAABoAAAC9AAAAuwAA
        ABYAAAA9AAAAswAAABMAAAAAAAAAIwAAAMEAAAAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHwAA
        AMEAAAAjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAJgAAACEAAAAAQAAAAAAAAAAAAAAGwAA
        AL0AAAC7AAAAGgAAAIcAAACNAAAAAQAAAAAAAAAjAAAAwQAAAB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAfAAAAwQAAACMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANgAAAMUAAABRAAAAAQAA
        AAAAAAAAAAAAFgAAABgAAABTAAAAwgAAADAAAAAAAAAAAAAAACMAAADBAAAAHwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAB8AAADBAAAAIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVAAA
        AMcAAACDAAAAPQAAACkAAAA8AAAAgwAAAMYAAABOAAAAAAAAAAAAAAAAAAAAIwAAAMEAAAAfAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAHwAAAMEAAAAjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAOQAAAJMAAAC5AAAAwAAAALkAAACQAAAANwAAAAEAAAAAAAAAAAAAAAAAAAAjAAAAwQAA
        AB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfAAAAwQAAACMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABUAAAAdAAAAFAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACMAAADBAAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8AAADAAAAAIwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAIwAAAMAAAAAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAMIAAABIAAAAIQAA
        ACMAAAAjAAAAIwAAACMAAAAjAAAAIwAAACMAAAAjAAAAIwAAACMAAAAjAAAAIwAAACMAAAAjAAAAIwAA
        ACMAAAAjAAAAIwAAACEAAABIAAAAwQAAABsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAfQAA
        AMQAAADBAAAAwQAAAMEAAADBAAAAwQAAAMEAAADBAAAAwQAAAMEAAADBAAAAwQAAAMEAAADBAAAAwQAA
        AMEAAADBAAAAwQAAAMEAAADBAAAAwQAAAMQAAAB5AAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAHAAAAHAAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAA
        AB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHAAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///+D////g////AB8AAAAeAAAODgAAEQ4+fxEeMD4RDiAeDg4gDwAeIQ
        8AHjAf4H44AGB+PAAcfj4ADH4/B4x+Pw/Efj8fxH4/HkR+PxwEfj8MBH4/hgx+P8Acfj/AHH4/8Hx+P/
        /8fgAAAH4AAAB/AAAA////////////////8=
</value>
  </data>
</root>